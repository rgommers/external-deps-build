[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pyshow"
version = "0.1.0"
description = "Demo tool to show PEP-725 and mappings at work."
readme = "../README.md"
authors = [
  { name = "Ralf Gommers", email = "rgommers@quansight.com" },
  { name = "Jaime RodrÃ­guez-Guerra", email = "jrodriguez@quansight.com" },
]
license = { file = "../LICENSE" }
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
requires-python = ">=3.10"
dependencies = [
  "pypi_json",
  "distro",
  "rich",
  "typer",
  "requests",
  "external_metadata_mappings @ https://github.com/jaimergp/external-metadata-mappings/archive/main.tar.gz"
]

[project.urls]
homepage = "https://github.com/rgommers/external-deps-build"

[project.scripts]
py-show = "pyshow:entry_point"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]

[tool.pixi.pypi-dependencies]
"pyshow" = {editable = true, path = "."}
# "external_metadata_mappings" = {editable = true, path = "/Users/jrodriguez/devel/external-metadata-mappings"}

[tool.pixi.tasks]
prepare = "cd \"$PIXI_PROJECT_ROOT/..\" && python download_and_patch_sdist.py"
py-show = "cd \"$PIXI_PROJECT_ROOT/..\" && py-show"

[tool.pixi.feature.build.dependencies]
micromamba = "*"

[tool.pixi.feature.build.tasks.build-with-conda]
args = [
  {arg = "package"}
]
cmd = """
  cd \"$PIXI_PROJECT_ROOT/..\" &&
  python download_and_patch_sdist.py {{ package }} &&
  micromamba create -p $PIXI_PROJECT_ROOT/.pixi/build-envs/{{ package }} python pip || true &&
  $(py-show --external --system-install-cmd --package-manager micromamba --sdist-dir sdist/_amended {{ package }}) -p $PIXI_PROJECT_ROOT/.pixi/build-envs/{{ package }} &&
  micromamba run -p $PIXI_PROJECT_ROOT/.pixi/build-envs/{{ package }} python -m pip install sdist/_amended/{{ package }}-*.tar.gz -v
  """
[tool.pixi.environments]
build = ["build"]

[tool.ruff]
line-length = 99

[tool.hatch.metadata]
allow-direct-references = true
